touch in.sh && chmod 755 in.sh && nano in.sh
------
#!/bin/sh
yum update -y
yum install -y epel-release
yum -y install https://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum -y install yum-utils
yum-config-manager --enable remi-php74
yum update -y
yum install -y nginx
yum install -y htop
yum install -y cronie
yum install -y certbot
yum install -y python2-certbot-nginx
yum install -y mariadb-server
yum install -y php
yum install -y php-common
yum install -y php-mysql
yum install -y php-gd
yum install -y php-xml
yum install -y php-mbstring
yum install -y php-mcrypt
yum install -y php-xmlrpc
yum install -y unzip
yum install -y php-fpm
yum install -y php-pecl-zip
yum install -y logrotate
systemctl enable crond
systemctl enable php-fpm
systemctl enable mariadb
systemctl enable nginx
rm /etc/nginx/nginx.conf
rm in.sh
echo "DONE DONE DONE DONE well not really but things are installed"
-------
./in.sh
##############################################################################################
nano /etc/nginx/nginx.conf
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

# - Cloudflare real IP
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 104.16.0.0/12;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 173.245.48.0/20;                                                                                                                                       set_real_ip_from 188.114.96.0/20;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2c0f:f248::/32;
set_real_ip_from 2a06:98c0::/29;
real_ip_header CF-Connecting-IP;

  # - RATE LIMITED IF WANTED
  #  limit_req_zone $binary_remote_addr zone=mylimit:1m rate=40r/m;
  #  limit_req_status 429;
  #  limit_req zone=mylimit burst=30 nodelay;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # - 404 anything that goes to default
    server {
    listen       [::]:80 default_server;
    server_name  _;
    return 404;
    }
    include /etc/nginx/conf.d/*.conf;
}
########################################
nano /etc/php-fpm.d/www.conf
listen = /var/run/php-fpm/php-fpm.sock
listen.owner = nginx
listen.group = nginx
user = nginx
group = nginx
------------------
pm = ondemand
pm.max_children = 1
;pm.start_servers = 2
;pm.min_spare_servers = 1
;pm.max_spare_servers = 3
pm.process_idle_timeout = 10s;
pm.max_requests = 0
------------------
#######################################
nano /etc/my.cnf
symbolic-links=0
performance_schema = off
innodb_buffer_pool_size = 1M
key_buffer = 16K
max_allowed_packet = 1M
table_cache = 4
sort_buffer_size = 64K
read_buffer_size = 256K
read_rnd_buffer_size = 256K
net_buffer_length = 2K
thread_stack = 64K
######################################
mkdir /usr/share/nginx/html/WEBSITENAME
chmod 755 /usr/share/nginx/html/WEBSITENAME
chown -R nginx:nginx /usr/share/nginx/html/WEBSITENAME
nano /etc/nginx/conf.d/WEBSITENAME.conf
server {
    listen [::]:80;
    server_name  WEBSITENAME.com www.WEBSITENAME.com;

# note that these lines are originally from the "location /" block
    root   /usr/share/nginx/html/WEBSITENAME;
    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ =404;
    }
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
   	root /usr/share/nginx/html;
    }
    location ~* .(js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|woff|woff2|svg)$ {
    expires 30d;
    add_header Pragma "public";
    add_header Cache-Control "public";
    }
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}
##########################################################
systemctl restart nginx && systemctl restart mariadb
certbot --nginx --register-unsafely-without-email
export VISUAL=nano; crontab -e
0 2 * * 6 /usr/bin/certbot renew -q >/dev/null
/usr/bin/mysql_secure_installation
#set password for mysql and write it down
mysql -u root -p
create database WEBSITENAME;
grant all on WEBSITENAME.* to 'WEBSITEUSER' identified by 'DATABASEPASSWORD';
reboot
# Website server with php and a mysql database should be installed and ready to use for wordpress or anything else that uses those
